"0","library(AdapDiscom)"
"0","library(MASS)"
"0",""
"0","# Set parameters"
"0","n <- 100        # Training sample size"
"0","n.tuning <- 50  # Tuning sample size  "
"0","n.test <- 50    # Test sample size"
"0","p <- 50         # Number of variables"
"0","pp <- c(20, 15, 15)  # Block sizes (must sum to p)"
"0",""
"0","# Generate block-diagonal covariance matrix"
"0","Sigma <- generate.cov(p, example = 2)  # Block diagonal structure"
"0",""
"0","# Generate true beta coefficients"
"0","beta.true <- c(rep(2, 10), rep(0, 10), rep(1, 10), rep(0, 5), rep(-1, 10), rep(0, 5))"
"0",""
"0","# Generate training data"
"0","X.train <- mvrnorm(n, mu = rep(0, p), Sigma = Sigma)"
"0","y.train <- X.train %*% beta.true + rnorm(n)"
"0","n1=n2=n3=n4=n%/%4"
"0","p1 = pp[1]"
"0","p2 = pp[2]"
"0","p3 = pp[3]"
"0","X.train[(n1 + 1):(n1 + n2), (p1 + p2 + 1):(p1 + p2 + p3)] <- NA"
"0","X.train[(n1 + n2 + 1):(n1 + n2 + n3), (p1 + 1):(p1 + p2)] <- NA"
"0","X.train[(n1 + n2 + n3 + 1):(n1 + n2 + n3 + n4), (1:p1)] <- NA"
"0",""
"0","# Generate tuning data"
"0","X.tuning <- mvrnorm(n.tuning, mu = rep(0, p), Sigma = Sigma)"
"0","y.tuning <- X.tuning %*% beta.true + rnorm(n.tuning)"
"0",""
"0","# Generate test data"
"0","X.test <- mvrnorm(n.test, mu = rep(0, p), Sigma = Sigma)"
"0","y.test <- X.test %*% beta.true + rnorm(n.test)"
